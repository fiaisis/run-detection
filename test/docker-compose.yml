services:
  rabbit-mq:
    image: 'rabbitmq:3.12-management'
    ports:
      - '5672:5672'
      - '15672:15672'
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest

  run-detection:
    build:
      context: ../
      dockerfile: container/Dockerfile
    depends_on:
      rabbit-mq:
        condition: service_healthy
      fia_api:
        condition: service_healthy
    environment:
      QUEUE_HOST: 'rabbit-mq'
      INGRESS_QUEUE_NAME: 'watched-files'
      EGRESS_QUEUE_NAME: 'scheduled-jobs'
    volumes:
      - ../test/test_data/e2e_data:/archive

  fia_api:
    build:
      context: ../FIA-API
      dockerfile: container/fia_api.D
    # depends_on:
    #   db:
    #     condition: service_healthy
    ports:
      - '8000:80'
    # healthcheck:
    #   test: curl --fail -X 'GET' 'http://localhost:8000/healthz' || exit 1
    #   interval: 30s
    #   timeout: 30s
    #   retries: 3
    environment:
      FIA_API_API_KEY: shh

  db:
    image: postgres:latest
    restart: always
    ports:
      - 54321:54321 # this has an extra digit
    user: postgres
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fia
